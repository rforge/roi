# Generated by roxygen2: do not edit by hand

S3method("[",L_objective)
S3method("bounds<-",OP)
S3method("constraints<-",OP)
S3method(as.C_bound,"NULL")
S3method(as.C_bound,C_bound)
S3method(as.C_bound,list)
S3method(as.F_objective,F_objective)
S3method(as.F_objective,L_objective)
S3method(as.F_objective,Q_objective)
S3method(as.L_constraint,L_constraint)
S3method(as.L_constraint,NO_constraint)
S3method(as.L_constraint,list)
S3method(as.L_constraint,numeric)
S3method(as.L_objective,"NULL")
S3method(as.L_objective,"function")
S3method(as.L_objective,L_objective)
S3method(as.L_objective,Q_objective)
S3method(as.L_objective,numeric)
S3method(as.L_term,"NULL")
S3method(as.L_term,matrix)
S3method(as.L_term,numeric)
S3method(as.L_term,simple_triplet_matrix)
S3method(as.NO_constraint,L_constraint)
S3method(as.NO_constraint,NO_constraint)
S3method(as.OP,OP)
S3method(as.OP,numeric)
S3method(as.Q_constraint,L_constraint)
S3method(as.Q_constraint,Q_constraint)
S3method(as.Q_constraint,list)
S3method(as.Q_objective,"function")
S3method(as.Q_objective,Q_objective)
S3method(as.Q_objective,matrix)
S3method(as.Q_objective,numeric)
S3method(as.Q_objective,simple_triplet_matrix)
S3method(as.Q_term,"NULL")
S3method(as.Q_term,list)
S3method(as.Q_term,matrix)
S3method(as.Q_term,numeric)
S3method(as.Q_term,simple_triplet_matrix)
S3method(as.V_bound,"NULL")
S3method(as.V_bound,V_bound)
S3method(as.constraint,"NULL")
S3method(as.constraint,F_constraint)
S3method(as.constraint,L_constraint)
S3method(as.constraint,Q_constraint)
S3method(as.constraint,numeric)
S3method(as.function,F_objective)
S3method(as.function,L_objective)
S3method(as.function,Q_objective)
S3method(as.list,C_bound)
S3method(as.list,V_bound)
S3method(as.no_V_bounds_OP,OP)
S3method(as.no_V_bounds_OP,no_V_bounds)
S3method(as.objective,"function")
S3method(as.objective,default)
S3method(as.objective,objective)
S3method(as.rhs,"NULL")
S3method(as.rhs,numeric)
S3method(as.types,"NULL")
S3method(as.types,character)
S3method(bounds,OP)
S3method(c,C_bound)
S3method(c,F_constraint)
S3method(c,L_constraint)
S3method(c,NO_constraint)
S3method(c,V_bound)
S3method(c,bound)
S3method(constraints,OP)
S3method(dim,constraint)
S3method(equal,"NULL")
S3method(equal,L_constraint)
S3method(equal,Q_constraint)
S3method(equal,character)
S3method(equal,integer)
S3method(equal,list)
S3method(equal,logical)
S3method(equal,numeric)
S3method(equal,simple_triplet_matrix)
S3method(length,F_constraint)
S3method(length,L_constraint)
S3method(length,NO_constraint)
S3method(length,objective)
S3method(objective,default)
S3method(print,C_bound)
S3method(print,OP)
S3method(print,OP_solution)
S3method(print,V_bound)
S3method(print,bound)
S3method(print,constraint)
S3method(terms,"function")
S3method(terms,L_objective)
S3method(terms,Q_objective)
S3method(types,OP)
S3method(variable.names,L_constraint)
S3method(variable.names,Q_constraint)
export("bounds<-")
export("constraints<-")
export(.ROI_plugin_add_status_code_to_db)
export(.ROI_plugin_canonicalize_solution)
export(.ROI_plugin_get_solver_name)
export(.ROI_plugin_make_LP_signatures)
export(.ROI_plugin_make_MILP_signatures)
export(.ROI_plugin_make_MIQCP_signatures)
export(.ROI_plugin_make_MIQP_signatures)
export(.ROI_plugin_make_QP_signatures)
export(.ROI_plugin_make_signature)
export(.ROI_plugin_register_solver_method)
export(C_bound)
export(F_constraint)
export(F_objective)
export(G)
export(L_constraint)
export(L_objective)
export(NO_constraint)
export(OP)
export(Q_constraint)
export(Q_objective)
export(ROI_applicable_solvers)
export(ROI_available_solvers)
export(ROI_installed_solvers)
export(ROI_registered_solvers)
export(ROI_solve)
export(V_bound)
export(as.C_bound)
export(as.F_objective)
export(as.L_constraint)
export(as.L_objective)
export(as.L_term)
export(as.NO_constraint)
export(as.OP)
export(as.Q_constraint)
export(as.Q_objective)
export(as.Q_term)
export(as.V_bound)
export(as.constraint)
export(as.objective)
export(bounds)
export(constraints)
export(equal)
export(is.C_bound)
export(is.F_constraint)
export(is.L_constraint)
export(is.NO_constraint)
export(is.Q_constraint)
export(is.V_bound)
export(objective)
export(rbind.constraint)
export(solution)
export(solution_dual)
export(solution_sdp)
export(solution_solver)
export(types)
import("slam")
import(methods)
import(registry)
importFrom("stats","na.omit")
importFrom("stats","setNames")
importFrom("stats","terms")
importFrom("stats","variable.names")
