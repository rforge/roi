###############################################################
## imports
## we use several functions of package 'slam'
import("slam")

###############################################################
## ROI_solve (roi.R)

export("ROI_solve")

S3method("ROI_solve", "LP")
S3method("ROI_solve", "MIQCP")
S3method("ROI_solve", "MILP")
S3method("ROI_solve", "MIQP")
S3method("ROI_solve", "QCP")
S3method("ROI_solve", "QP")

###############################################################
## problem class constructors (constructors.R)
export("LP")
export("MILP")
export("MIQP")
export("MIQCP")
export("QCP")
export("QP")

S3method("print", "LP")
S3method("print", "MILP")
S3method("print", "MIQP")
S3method("print", "MIQCP")
S3method("print", "QCP")
S3method("print", "QP")


###############################################################
## solver methods (plugin_<solver>.R)

S3method(".solve_LP", "cplex")
S3method(".solve_LP", "lpsolve")
S3method(".solve_LP", "glpk")
S3method(".solve_LP", "symphony")

S3method(".solve_QCP", "cplex")

S3method(".solve_QP", "cplex")
S3method(".solve_QP", "quadprog")

S3method(".solve_MILP", "cplex")
S3method(".solve_MILP", "lpsolve")
S3method(".solve_MILP", "glpk")
S3method(".solve_MILP", "symphony")

S3method(".solve_MIQCP", "cplex")

S3method(".solve_MIQP", "cplex")

###############################################################
## objective function (objective.R)

export("as.L_objective",
       "as.Q_objective",
       "F_objective",
       "L_objective",
       "objective",
       "Q_objective")

S3method("as.function", "L_objective")
S3method("as.function", "Q_objective")

S3method("as.L_objective", "function")
S3method("as.L_objective", "L_objective")
S3method("as.L_objective", "numeric")
S3method("as.L_objective", "Q_objective")

S3method("as.Q_objective", "function")
S3method("as.Q_objective", "matrix")
S3method("as.Q_objective", "numeric")
S3method("as.Q_objective", "Q_objective")
S3method("as.Q_objective", "simple_triplet_matrix")

S3method("objective", "default")

S3method("terms", "function")
S3method("terms", "L_objective")
S3method("terms", "Q_objective")

###############################################################
## constraints (constraints.R)

export("as.constraint",
       "constraints",
       "constraints<-",
       "bounds",
       "bounds<-",
       "L_constraint",
       "Q_constraint",
       "F_constraint",
       "V_bound")

S3method("as.L_constraint", "L_constraint")
S3method("as.L_constraint", "list")
S3method("as.L_constraint", "numeric")

S3method("as.Q_constraint", "Q_constraint")
S3method("as.Q_constraint", "list")

S3method("as.constraint", "L_constraint")
S3method("as.constraint", "Q_constraint")

S3method("as.list", "V_bound")

S3method("bounds", "LP")
S3method("bounds", "QCP")
S3method("bounds", "QP")

S3method("bounds", "MILP")
S3method("bounds", "MIQCP")
S3method("bounds", "MIQP")

S3method("bounds<-", "LP")
S3method("bounds<-", "QCP")
S3method("bounds<-", "QP")

S3method("bounds<-", "MILP")
S3method("bounds<-", "MIQCP")
S3method("bounds<-", "MIQP")

S3method("constraints", "LP")
S3method("constraints", "QCP")
S3method("constraints", "QP")

S3method("constraints", "MILP")
S3method("constraints", "MIQCP")
S3method("constraints", "MIQP")

S3method("constraints<-", "LP")
S3method("constraints<-", "QCP")
S3method("constraints<-", "QP")

S3method("constraints<-", "MILP")
S3method("constraints<-", "MIQCP")
S3method("constraints<-", "MIQP")

S3method("constraints", "LP")

S3method("length", "L_constraint")
S3method("length", "Q_constraint")
S3method("length", "F_constraint")

S3method("rbind", "L_constraint")

S3method("print", "constraint")


###############################################################
## Further S3 Methods (sorted alphabetically)

S3method("as.L_term", "numeric")
S3method("as.L_term", "matrix")
S3method("as.L_term", "simple_triplet_matrix")

S3method("as.Q_term", "list")
S3method("as.Q_term", "numeric")
S3method("as.Q_term", "matrix")
S3method("as.Q_term", "simple_triplet_matrix")

S3method("as.rhs", "numeric")




## exported functions for status_db handling
##export("add_status_code_to_db",
##       "get_status_message_from_db",
##       "delete_status_code_from_db")
